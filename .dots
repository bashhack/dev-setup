#!/bin/bash

function runDots() {
  # Ask for admin password
  sudo -v

  # Keep-alive: update existing `sudo` time stamp until the script is done
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

  # Run setions based on command line arguments
  for ARG in "$@"
  do
    if [ $ARG == "bootstrap" ] || [ $ARG == "all" ]; then
      echo ""
      echo "-------------------------------"
      echo "Syncing the dev-setup repo to your local machine."
      echo "-------------------------------"
      echo ""
      cd ~ && curl -#L https://github.com/bashhack/dev-setup/tarball/master | tar -xzv --strip-components 1 --exclude={README.rst,LICENSE,bootstrap.sh,linuxprep.sh,coreapps.sh,pydev.sh,nodedev.sh,misclang.sh,aws.sh,datastores.sh}
    fi
    if [ $ARG == "linuxprep" ] || [ $ARG == "all" ]; then
      # Run the linuxprep.sh script
      echo ""
      echo "-------------------------------"
      echo "Updating Linux and installing utilities."
      echo "-------------------------------"
      echo ""
      bash ./dev-setup/linuxprep.sh
    fi
    if [ $ARG == "coreapps" ] || [ $ARG == "all" ]; then
      # Run the coreapps.sh script
      echo ""
      echo "-------------------------------"
      echo "Installing core applications."
      echo "-------------------------------"
      echo ""
      bash ./dev-setup/coreapps.sh
    fi
    if [ $ARG == "pydev" ] || [ $ARG == "all" ]; then
        # Run the pydev.sh script
        echo ""
        echo "-------------------------------"
        echo "Installing Python dev tools."
        echo "-------------------------------"
        echo ""
        bash ./dev-setup/pydev.sh
    fi
    if [ $ARG == "nodedev" ] || [ $ARG == "all" ]; then
        # Run the nodedev.sh script
        echo ""
        echo "-------------------------------"
        echo "Installing Node dev tools."
        echo "-------------------------------"
        echo ""
        bash ./dev-setup/nodedev.sh
    fi
    if [ $ARG == "misclang" ] || [ $ARG == "all" ]; then
        # Run the misclang.sh script
        echo ""
        echo "-------------------------------"
        echo "Installing miscellaneous programming languages."
        echo "-------------------------------"
        echo ""
        bash ./dev-setup/misclang.sh
    fi
    if [ $ARG == "aws" ] || [ $ARG == "all" ]; then
        # Run the aws.sh script
        echo ""
        echo "-------------------------------"
        echo "Installing big data tools, AWS, and Heroku."
        echo "-------------------------------"
        echo ""
        bash ./dev-setup/aws.sh
    fi
    if [ $ARG == "datastores" ] || [ $ARG == "all" ]; then
        # Run the datastores.sh script
        echo ""
        echo "-------------------------------"
        echo "Installing datastores."
        echo "-------------------------------"
        echo ""
        bash ./dev-setup/datastores.sh
    fi
  done

  echo "-------------------------------"
  echo "Completed running .dots, restart your computer to ensure all updates take effect"
  echo "-------------------------------"
}

read -p "This script may overwrite existing files in your home directory. Are you sure? (y/n) " -n 1;
echo "";
if [[ $REPLY =~ ^[Yy]$ ]]; then
  runDots $@
fi;

unset runDots;
